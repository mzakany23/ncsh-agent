name: NC Soccer Hudson Tag-Based Deployment

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  verify-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get tag version
        id: get_version
        run: echo "::set-output name=version::${GITHUB_REF#refs/tags/}"

      - name: Verify version exists in CHANGELOG.md
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          if ! grep -q "\[$VERSION\]" CHANGELOG.md; then
            echo "Error: Version $VERSION not found in CHANGELOG.md"
            echo "Please update the CHANGELOG.md file with the new version before tagging."
            exit 1
          fi
          echo "Version $VERSION found in CHANGELOG.md"

  deploy:
    needs: verify-changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get tag version
        id: get_version
        run: echo "::set-output name=version::${GITHUB_REF#refs/tags/}"

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          echo "Deploying version $VERSION to production server"

          # Connect via SSH and execute deployment commands
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd /path/to/ncsoccer-agent

            # Pull the latest code for the tag
            git fetch --all --tags
            git checkout ${{ steps.get_version.outputs.version }}

            # Restart services
            sudo systemctl restart ncsoccer-agent

            # Verify deployment
            echo "Checking service status..."
            sudo systemctl status ncsoccer-agent
          EOF

      - name: Notify deployment complete
        run: echo "Deployment of version ${{ steps.get_version.outputs.version }} completed successfully!"